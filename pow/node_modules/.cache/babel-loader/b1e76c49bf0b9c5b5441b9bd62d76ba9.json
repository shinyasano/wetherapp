{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\webaplication\\\\pow\\\\src\\\\pages\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Header from '../template/Header';\nimport Mainmessage from '../template/Mainmessage';\nimport Sarchbar from '../template/Sarchbar';\nimport Skiarea_list from './Skiarea_list';\nimport Buttun from '../template/Buttun';\n\nclass App extends Component {\n  //コンストラクタ stateを使う場会必須\n  constructor(props) {\n    super(props);\n    this.state = {\n      area: '',\n      pref: '',\n      posts: []\n    }; //post送信\n\n    fetch('http://localhost0:4000', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        area: this.state.area,\n        pref: this.state.pref\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        console.warn('Something went wrong on api server!');\n      }\n    }).then(json => {\n      return callback(json);\n    }).catch(error => {\n      console.error(error);\n    }); //expressとの橋渡しpostsにSQLで取得したものがはいっている。\n\n    fetch(\"http://localhost0:4000\").then(response => response.json()).then(posts => this.setState({\n      posts\n    }));\n  }\n\n  AreaStateSet(getstate) {\n    this.setState({\n      area: getstate\n    });\n  }\n\n  PrefStateSet(getstate) {\n    this.setState({\n      pref: getstate\n    });\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Mainmessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Sarchbar, {\n        SuperAreaStateSet: getstate => this.AreaStateSet(getstate),\n        SuperPrefStateSet: getstate => this.PrefStateSet(getstate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Buttun, Object.assign({\n        area: this.state.area,\n        pref: this.state.pref,\n        url: \"/skiarea\"\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/skiarea\",\n      render: props => React.createElement(Skiarea_list, {\n        area: this.state.area,\n        pref: this.state.pref,\n        posts: this.state.posts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\shins\\OneDrive\\デスクトップ\\webaplication\\pow\\src\\pages\\App.js"],"names":["React","Component","axios","BrowserRouter","Route","Header","Mainmessage","Sarchbar","Skiarea_list","Buttun","App","constructor","props","state","area","pref","posts","fetch","method","headers","Accept","body","JSON","stringify","then","response","status","json","console","warn","callback","catch","error","setState","AreaStateSet","getstate","PrefStateSet","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Header from '../template/Header';\nimport Mainmessage from '../template/Mainmessage';\nimport Sarchbar from '../template/Sarchbar';\nimport Skiarea_list from './Skiarea_list';\nimport Buttun from '../template/Buttun';\n\nclass App extends Component {\n  //コンストラクタ stateを使う場会必須\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      area:'',\n      pref:'',\n      posts: [],\n    };\n    //post送信\n    fetch('http://localhost0:4000', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        area: this.state.area,\n        pref: this.state.pref\n      })\n    })\n    .then(response => {\n      if (response.status === 200) {\n        return response.json()\n      } else {\n        console.warn('Something went wrong on api server!');\n      }\n    })\n    .then(json => {\n      return callback(json)\n    })\n    .catch(error => {\n      console.error(error);\n    })\n    //expressとの橋渡しpostsにSQLで取得したものがはいっている。\n    fetch(\"http://localhost0:4000\")\n    .then(response => response.json())\n    .then(posts => this.setState({ posts }));\n  }\n\n\n  AreaStateSet(getstate) {\n    this.setState({ area: getstate },);\n  }\n  PrefStateSet(getstate) {\n    this.setState({ pref: getstate },);\n  }\n  render() {\n    return (\n      <BrowserRouter>\n      <div className='main'>\n        <Header />\n      </div>\n\n        <Route exact path='/' component={Mainmessage} />\n        <Route exact path='/' render={props => \n        <Sarchbar \n        SuperAreaStateSet={getstate => this.AreaStateSet(getstate)}\n        SuperPrefStateSet={getstate => this.PrefStateSet(getstate)}\n        />} />\n        <Route exact path='/' render={props => <Buttun area={this.state.area} pref={this.state.pref} url=\"/skiarea\" {...props}/>}\n         />\n\n        <Route  path='/skiarea' render={props => <Skiarea_list area={this.state.area} pref={this.state.pref} posts={this.state.posts}/>} />\n\n\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}