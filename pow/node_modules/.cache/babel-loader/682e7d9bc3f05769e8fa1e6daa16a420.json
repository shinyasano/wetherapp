{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\webaplication\\\\pow\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\webaplication\\\\pow\\\\src\\\\template\\\\Ski_area_table.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\ndiv .table{\\n\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { createGlobalStyle } from \"styled-components\";\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 650\n  }\n})); //天気のデータ\n\nvar todaydata = this.state.json.data.daily.data[0];\nvar tommorowdata = this.state.json.data.daily.data[1];\nvar dayaftertommorowdata = this.state.json.data.daily.data[2]; //本日の日付\n\nvar todaydate = new Date();\nvar tommorowdate;\ntommorowdate.setDate(todaydate.getDate() + 1);\nvar dayaftertommorowdate;\ndayaftertommorowdate.setDate(todaydate.getDate() + 2); //テーブル作成関数\n\nfunction createDay(today, tommorow, dayaftertommorow) {\n  today = \"\".concat(today.getMonth() + 1, \"/\").concat(today.getDate());\n  tommorow = \"\".concat(tommorow.getMonth() + 1, \"/\").concat(tommorow.getDate());\n  dayaftertommorow = \"\".concat(dayaftertommorow.getMonth() + 1, \"/\").concat(dayaftertommorow.getDate());\n  return {\n    today,\n    tommorow,\n    dayaftertommorow\n  };\n}\n\nfunction createwether(todaydata, tommorowdata, dayaftertommorowdata) {\n  let todayweather = todaydata.icon;\n  let tommoroweather = tommorowdata.icon;\n  let dayaftertommoroweather = dayaftertommorowdata.icon;\n  return {\n    todayweather,\n    tommoroweather,\n    dayaftertommoroweather\n  };\n}\n\nfunction createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata) {\n  let todaytempertureHigh = todaydata.tempertureHigh;\n  let tommorowtempertureHigh = tommorowdata.tempertureHigh;\n  let dayaftertommorowtempertureHigh = dayaftertommorowdata.tempertureHigh;\n  return {\n    todaytempertureHigh,\n    tommorowtempertureHigh,\n    dayaftertommorowtempertureHigh\n  };\n}\n\nfunction createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata) {\n  let todaytempertureLow = todaydata.tempertureLow;\n  let tommorowtempertureLow = tommorowdata.tempertureLow;\n  let dayaftertommorowtempertureLow = dayaftertommorowdata.tempertureLow;\n  return {\n    todaytempertureLow,\n    tommorowtempertureLow,\n    dayaftertommorowtempertureLow\n  };\n}\n\nfunction createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata) {\n  let todayprecipProbbility = todaydata.precipProbbility;\n  let tommorowprecipProbbility = tommorowdata.precipProbbility;\n  let dayaftertommorowprecipProbbility = dayaftertommorowdata.precipProbbility;\n  return {\n    todayprecipProbbility,\n    tommorowprecipProbbility,\n    dayaftertommorowprecipProbbility\n  };\n}\n\nfunction createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata) {\n  let todayprecipIntensity = todaydata.precipIntensity;\n  let tommorowpprecipIntensity = tommorowdata.precipIntensity;\n  let dayaftertommorowprecipIntensity = dayaftertommorowdata.precipIntensity;\n  return {\n    todayprecipIntensity,\n    tommorowpprecipIntensity,\n    dayaftertommorowprecipIntensity\n  };\n}\n\nfunction createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata) {\n  let todaywindSpeed = todaydata.windSpeed;\n  let tommorowwindSpeed = tommorowdata.windSpeed;\n  let dayaftertommorowwindSpeed = dayaftertommorowdata.windSpeed;\n  return {\n    todaywindSpeed,\n    tommorowwindSpeed,\n    dayaftertommorowwindSpeed\n  };\n}\n\nconst rows = [createDay(todaydate, tommorowdate, dayaftertommorowdate), createwether(todaydata, tommorowdata, dayaftertommorowdata), createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata), createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata), createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata), createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata), createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata)];\nconst GlobalStyle = createGlobalStyle(_templateObject());\n\nclass Ski_area_table extends Component {\n  //コンストラクタ stateを使う場会必須\n  constructor(props) {\n    super(props);\n    this.state = {\n      json: []\n    };\n    var url = \"http://localhost:4000/wether\";\n    axios.post(url, {\n      latlong: this.props.data.latlong\n    }).then(response => this.JsonStateSet(response)).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  JsonStateSet(response) {\n    this.setState({\n      json: response\n    });\n    console.log(this.state.json.data.daily.data[0].precipIntensity);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), this.props.data.name, this.props.data.pref, this.props.data.address, this.props.data.latlong, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.props.data.name))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, rows.map(row => React.createElement(TableRow, {\n      key: row.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, row.calories), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, row.fat), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, row.carbs), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, row.protein)))))));\n  }\n\n}\n\nexport default Ski_area_table;","map":{"version":3,"sources":["C:\\Users\\shins\\OneDrive\\デスクトップ\\webaplication\\pow\\src\\template\\Ski_area_table.js"],"names":["React","Component","createGlobalStyle","axios","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","todaydata","state","json","data","daily","tommorowdata","dayaftertommorowdata","todaydate","Date","tommorowdate","setDate","getDate","dayaftertommorowdate","createDay","today","tommorow","dayaftertommorow","getMonth","createwether","todayweather","icon","tommoroweather","dayaftertommoroweather","createtempertureHigh","todaytempertureHigh","tempertureHigh","tommorowtempertureHigh","dayaftertommorowtempertureHigh","createtempertureLow","todaytempertureLow","tempertureLow","tommorowtempertureLow","dayaftertommorowtempertureLow","createprecipProbbility","todayprecipProbbility","precipProbbility","tommorowprecipProbbility","dayaftertommorowprecipProbbility","createprecipIntensity","todayprecipIntensity","precipIntensity","tommorowpprecipIntensity","dayaftertommorowprecipIntensity","createtewindSpeed","todaywindSpeed","windSpeed","tommorowwindSpeed","dayaftertommorowwindSpeed","rows","GlobalStyle","Ski_area_table","constructor","props","url","post","latlong","then","response","JsonStateSet","catch","error","console","log","setState","render","name","pref","address","map","row","calories","fat","carbs","protein"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n//天気のデータ\r\nvar todaydata = this.state.json.data.daily.data[0]\r\nvar tommorowdata = this.state.json.data.daily.data[1]\r\nvar dayaftertommorowdata = this.state.json.data.daily.data[2]\r\n//本日の日付\r\nvar todaydate = new Date();\r\nvar tommorowdate\r\ntommorowdate.setDate(todaydate.getDate() + 1);\r\nvar dayaftertommorowdate\r\ndayaftertommorowdate.setDate(todaydate.getDate() + 2);\r\n//テーブル作成関数\r\nfunction createDay(today, tommorow, dayaftertommorow) {\r\n  today = `${today.getMonth()+1}/${today.getDate()}`;\r\n  tommorow = `${tommorow.getMonth()+1}/${tommorow.getDate()}`;\r\n  dayaftertommorow = `${dayaftertommorow.getMonth()+1}/${dayaftertommorow.getDate()}`;\r\n  return { today, tommorow, dayaftertommorow};\r\n}\r\nfunction createwether(todaydata, tommorowdata, dayaftertommorowdata) {\r\n  let todayweather = todaydata.icon;\r\n  let tommoroweather = tommorowdata.icon;\r\n  let dayaftertommoroweather = dayaftertommorowdata.icon;\r\n  return { todayweather, tommoroweather, dayaftertommoroweather};\r\n}\r\nfunction createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata) {\r\n  let todaytempertureHigh = todaydata.tempertureHigh;\r\n  let tommorowtempertureHigh = tommorowdata.tempertureHigh;\r\n  let dayaftertommorowtempertureHigh = dayaftertommorowdata.tempertureHigh;\r\n  return { todaytempertureHigh, tommorowtempertureHigh, dayaftertommorowtempertureHigh};\r\n}\r\nfunction createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata) {\r\n  let todaytempertureLow = todaydata.tempertureLow;\r\n  let tommorowtempertureLow = tommorowdata.tempertureLow;\r\n  let dayaftertommorowtempertureLow = dayaftertommorowdata.tempertureLow;\r\n  return { todaytempertureLow, tommorowtempertureLow, dayaftertommorowtempertureLow};\r\n}\r\nfunction createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata) {\r\n  let todayprecipProbbility = todaydata.precipProbbility;\r\n  let tommorowprecipProbbility = tommorowdata.precipProbbility;\r\n  let dayaftertommorowprecipProbbility = dayaftertommorowdata.precipProbbility;\r\n  return { todayprecipProbbility, tommorowprecipProbbility, dayaftertommorowprecipProbbility};\r\n}\r\nfunction createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata) {\r\n  let todayprecipIntensity = todaydata.precipIntensity;\r\n  let tommorowpprecipIntensity = tommorowdata.precipIntensity;\r\n  let dayaftertommorowprecipIntensity = dayaftertommorowdata.precipIntensity;\r\n  return { todayprecipIntensity, tommorowpprecipIntensity, dayaftertommorowprecipIntensity};\r\n}\r\nfunction createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata) {\r\n  let todaywindSpeed = todaydata.windSpeed;\r\n  let tommorowwindSpeed = tommorowdata.windSpeed;\r\n  let dayaftertommorowwindSpeed = dayaftertommorowdata.windSpeed;\r\n  return { todaywindSpeed, tommorowwindSpeed, dayaftertommorowwindSpeed};\r\n}\r\nconst rows = [\r\ncreateDay(todaydate, tommorowdate, dayaftertommorowdate),\r\ncreatewether(todaydata, tommorowdata, dayaftertommorowdata),\r\ncreatetempertureHigh(todaydata, tommorowdata, dayaftertommorowdata),\r\ncreatetempertureLow(todaydata, tommorowdata, dayaftertommorowdata),\r\ncreateprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata),\r\ncreateprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata),\r\ncreatetewindSpeed(todaydata, tommorowdata, dayaftertommorowdata),\r\n];\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\ndiv .table{\r\n\r\n}\r\n`;\r\nclass Ski_area_table extends Component {\r\n    //コンストラクタ stateを使う場会必須\r\n    constructor (props) {\r\n      super(props)\r\n      this.state = {\r\n        json :[],\r\n      };\r\n    \r\n    var url = `http://localhost:4000/wether`;\r\n    axios.post(url, {\r\n      latlong: this.props.data.latlong\r\n    })\r\n    .then(response => (this.JsonStateSet(response)))\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n    }\r\n    JsonStateSet(response){\r\n      this.setState({ json:response})\r\n      console.log(this.state.json.data.daily.data[0].precipIntensity);\r\n        }\r\n  render() {\r\n    return (\r\n      \r\n    <div className='table'>\r\n      <GlobalStyle />\r\n      {this.props.data.name}\r\n      {this.props.data.pref}\r\n      {this.props.data.address}\r\n      {this.props.data.latlong}\r\n\r\n\r\n      <Paper >\r\n      <Table >\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">{this.props.data.name}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n    </div>\r\n    )}\r\n}\r\n\r\nexport default Ski_area_table;"]},"metadata":{},"sourceType":"module"}