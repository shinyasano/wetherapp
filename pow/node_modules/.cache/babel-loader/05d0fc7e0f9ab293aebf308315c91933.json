{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\webaplication\\\\pow\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\webaplication\\\\pow\\\\src\\\\template\\\\Ski_area_table.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\ndiv .table{\\n\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { createGlobalStyle } from \"styled-components\";\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 650\n  }\n}));\nconst GlobalStyle = createGlobalStyle(_templateObject());\n\nclass Ski_area_table extends Component {\n  //コンストラクタ stateを使う場会必須\n  constructor(props) {\n    super(props);\n    this.state = {\n      json: []\n    };\n    var url = \"http://localhost:4000/wether\";\n    axios.post(url, {\n      latlong: this.props.data.latlong\n    }).then(response => this.JsonStateSet(response)).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  JsonStateSet(response) {\n    this.setState({\n      json: response\n    });\n  }\n\n  render() {\n    //テーブル作成関数\n    function createDay(today, tommorow, dayaftertommorow) {\n      today = \"\".concat(today.getMonth() + 1, \"/\").concat(today.getDate());\n      tommorow = \"\".concat(tommorow.getMonth() + 1, \"/\").concat(tommorow.getDate());\n      dayaftertommorow = \"\".concat(dayaftertommorow.getMonth() + 1, \"/\").concat(dayaftertommorow.getDate());\n      return {\n        today,\n        tommorow,\n        dayaftertommorow\n      };\n    }\n\n    ;\n\n    function createwether(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todayweather = todaydata.icon;\n      let tommoroweather = tommorowdata.icon;\n      let dayaftertommoroweather = dayaftertommorowdata.icon;\n      return {\n        todayweather,\n        tommoroweather,\n        dayaftertommoroweather\n      };\n    }\n\n    ;\n\n    function createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todaytempertureHigh = todaydata.tempertureHigh;\n      let tommorowtempertureHigh = tommorowdata.tempertureHigh;\n      let dayaftertommorowtempertureHigh = dayaftertommorowdata.tempertureHigh;\n      return {\n        todaytempertureHigh,\n        tommorowtempertureHigh,\n        dayaftertommorowtempertureHigh\n      };\n    }\n\n    ;\n\n    function createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todaytempertureLow = todaydata.tempertureLow;\n      let tommorowtempertureLow = tommorowdata.tempertureLow;\n      let dayaftertommorowtempertureLow = dayaftertommorowdata.tempertureLow;\n      return {\n        todaytempertureLow,\n        tommorowtempertureLow,\n        dayaftertommorowtempertureLow\n      };\n    }\n\n    ;\n\n    function createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todayprecipProbbility = todaydata.precipProbbility;\n      let tommorowprecipProbbility = tommorowdata.precipProbbility;\n      let dayaftertommorowprecipProbbility = dayaftertommorowdata.precipProbbility;\n      return {\n        todayprecipProbbility,\n        tommorowprecipProbbility,\n        dayaftertommorowprecipProbbility\n      };\n    }\n\n    ;\n\n    function createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todayprecipIntensity = todaydata.precipIntensity;\n      let tommorowpprecipIntensity = tommorowdata.precipIntensity;\n      let dayaftertommorowprecipIntensity = dayaftertommorowdata.precipIntensity;\n      return {\n        todayprecipIntensity,\n        tommorowpprecipIntensity,\n        dayaftertommorowprecipIntensity\n      };\n    }\n\n    ;\n\n    function createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todaywindSpeed = todaydata.windSpeed;\n      let tommorowwindSpeed = tommorowdata.windSpeed;\n      let dayaftertommorowwindSpeed = dayaftertommorowdata.windSpeed;\n      return {\n        todaywindSpeed,\n        tommorowwindSpeed,\n        dayaftertommorowwindSpeed\n      };\n    }\n\n    ;\n\n    function tablecreate(data) {\n      //天気のデータ\n      var todaydata = data[0];\n      var tommorowdata = data[1];\n      var dayaftertommorowdata = data[2]; //本日の日付\n\n      var todaydate = new Date();\n      var tommorowdate;\n      tommorowdate.setDate(todaydate.getDate() + 1);\n      var dayaftertommorowdate;\n      dayaftertommorowdate.setDate(todaydate.getDate() + 2);\n      return [createDay(todaydate, tommorowdate, dayaftertommorowdate), createwether(todaydata, tommorowdata, dayaftertommorowdata), createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata), createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata), createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata), createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata), createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata)];\n    }\n\n    return React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), this.props.data.name, this.props.data.pref, this.props.data.address, this.props.data.latlong, this.state.json);\n  }\n\n}\n\nexport default Ski_area_table;","map":{"version":3,"sources":["C:\\Users\\shins\\OneDrive\\デスクトップ\\webaplication\\pow\\src\\template\\Ski_area_table.js"],"names":["React","Component","createGlobalStyle","axios","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","GlobalStyle","Ski_area_table","constructor","props","state","json","url","post","latlong","data","then","response","JsonStateSet","catch","error","console","log","setState","render","createDay","today","tommorow","dayaftertommorow","getMonth","getDate","createwether","todaydata","tommorowdata","dayaftertommorowdata","todayweather","icon","tommoroweather","dayaftertommoroweather","createtempertureHigh","todaytempertureHigh","tempertureHigh","tommorowtempertureHigh","dayaftertommorowtempertureHigh","createtempertureLow","todaytempertureLow","tempertureLow","tommorowtempertureLow","dayaftertommorowtempertureLow","createprecipProbbility","todayprecipProbbility","precipProbbility","tommorowprecipProbbility","dayaftertommorowprecipProbbility","createprecipIntensity","todayprecipIntensity","precipIntensity","tommorowpprecipIntensity","dayaftertommorowprecipIntensity","createtewindSpeed","todaywindSpeed","windSpeed","tommorowwindSpeed","dayaftertommorowwindSpeed","tablecreate","todaydate","Date","tommorowdate","setDate","dayaftertommorowdate","name","pref","address"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\ndiv .table{\r\n\r\n}\r\n`;\r\n  \r\nclass Ski_area_table extends Component {\r\n    //コンストラクタ stateを使う場会必須\r\n    constructor (props) {\r\n      super(props)\r\n      this.state = {\r\n        json :[],\r\n      };\r\n    \r\n    var url = `http://localhost:4000/wether`;\r\n    axios.post(url, {\r\n      latlong: this.props.data.latlong\r\n    })\r\n    .then(response => (this.JsonStateSet(response)))\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n    }\r\n    JsonStateSet(response){\r\n      this.setState({json:response})\r\n        }\r\n\r\n  render() {\r\n\r\n  //テーブル作成関数\r\n  function createDay(today, tommorow, dayaftertommorow) {\r\n    today = `${today.getMonth()+1}/${today.getDate()}`;\r\n    tommorow = `${tommorow.getMonth()+1}/${tommorow.getDate()}`;\r\n    dayaftertommorow = `${dayaftertommorow.getMonth()+1}/${dayaftertommorow.getDate()}`;\r\n    return { today, tommorow, dayaftertommorow};\r\n  };\r\n  function createwether(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todayweather = todaydata.icon;\r\n    let tommoroweather = tommorowdata.icon;\r\n    let dayaftertommoroweather = dayaftertommorowdata.icon;\r\n    return { todayweather, tommoroweather, dayaftertommoroweather};\r\n  };\r\n  function createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todaytempertureHigh = todaydata.tempertureHigh;\r\n    let tommorowtempertureHigh = tommorowdata.tempertureHigh;\r\n    let dayaftertommorowtempertureHigh = dayaftertommorowdata.tempertureHigh;\r\n    return { todaytempertureHigh, tommorowtempertureHigh, dayaftertommorowtempertureHigh};\r\n  };\r\n  function createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todaytempertureLow = todaydata.tempertureLow;\r\n    let tommorowtempertureLow = tommorowdata.tempertureLow;\r\n    let dayaftertommorowtempertureLow = dayaftertommorowdata.tempertureLow;\r\n    return { todaytempertureLow, tommorowtempertureLow, dayaftertommorowtempertureLow};\r\n  };\r\n  function createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todayprecipProbbility = todaydata.precipProbbility;\r\n    let tommorowprecipProbbility = tommorowdata.precipProbbility;\r\n    let dayaftertommorowprecipProbbility = dayaftertommorowdata.precipProbbility;\r\n    return { todayprecipProbbility, tommorowprecipProbbility, dayaftertommorowprecipProbbility};\r\n  };\r\n  function createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todayprecipIntensity = todaydata.precipIntensity;\r\n    let tommorowpprecipIntensity = tommorowdata.precipIntensity;\r\n    let dayaftertommorowprecipIntensity = dayaftertommorowdata.precipIntensity;\r\n    return { todayprecipIntensity, tommorowpprecipIntensity, dayaftertommorowprecipIntensity};\r\n  };\r\n  function createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todaywindSpeed = todaydata.windSpeed;\r\n    let tommorowwindSpeed = tommorowdata.windSpeed;\r\n    let dayaftertommorowwindSpeed = dayaftertommorowdata.windSpeed;\r\n    return { todaywindSpeed, tommorowwindSpeed, dayaftertommorowwindSpeed};\r\n  };\r\n  function tablecreate(data){\r\n    //天気のデータ\r\n    var todaydata = data[0]\r\n    var tommorowdata = data[1]\r\n    var dayaftertommorowdata = data[2]\r\n    //本日の日付\r\n    var todaydate = new Date();\r\n    var tommorowdate\r\n    tommorowdate.setDate(todaydate.getDate() + 1);\r\n    var dayaftertommorowdate\r\n    dayaftertommorowdate.setDate(todaydate.getDate() + 2);\r\n    return ([\r\n      createDay(todaydate, tommorowdate, dayaftertommorowdate),\r\n      createwether(todaydata, tommorowdata, dayaftertommorowdata),\r\n      createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata),\r\n      createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata),\r\n      createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata),\r\n      createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata),\r\n      createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata),\r\n      ]\r\n    );\r\n  }\r\n    return (\r\n    <div className='table'>\r\n      <GlobalStyle />\r\n      {this.props.data.name}\r\n      {this.props.data.pref}\r\n      {this.props.data.address}\r\n      {this.props.data.latlong}\r\n      {this.state.json}\r\n\r\n  \r\n    </div>\r\n    )}\r\n          \r\n}\r\n\r\nexport default Ski_area_table;"]},"metadata":{},"sourceType":"module"}