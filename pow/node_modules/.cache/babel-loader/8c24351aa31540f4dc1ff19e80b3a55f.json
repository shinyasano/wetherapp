{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\webaplication\\\\pow\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\webaplication\\\\pow\\\\src\\\\template\\\\Ski_area_table.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n@import url('../../../weather-icons-master/css/weather-icons.min.css');\\ndiv .root{\\n  text-align:center;\\n  width: 100%;\\n  font-family: 'Kosugi Maru', sans-serif;\\n}\\nspan:before{\\n  content:\\\"\\f002\\\";\\n  font-family: 'weathericons';\\n}\\n\"], [\"\\n\\n@import url('../../../weather-icons-master/css/weather-icons.min.css');\\ndiv .root{\\n  text-align:center;\\n  width: 100%;\\n  font-family: 'Kosugi Maru', sans-serif;\\n}\\nspan:before{\\n  content:\\\"\\\\f002\\\";\\n  font-family: 'weathericons';\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { createGlobalStyle } from \"styled-components\";\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { styled } from '@material-ui/styles';\nimport color from '@material-ui/core/colors/teal';\nconst GlobalStyle = createGlobalStyle(_templateObject()); //CSS定義\n\nconst MyTable = styled(Table)({\n  height: \"490px\",\n  padding: '100px 30px',\n  width: \"600px\",\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  marginLeft: 'auto',\n  marginRight: 'auto'\n});\nconst MyPaper = styled(Paper)({\n  height: \"500pxpx\",\n  padding: '30px 30px',\n  width: \"700px\",\n  textAlign: 'center',\n  marginLeft: 'auto',\n  marginRight: 'auto'\n});\n\nclass Ski_area_table extends Component {\n  //コンストラクタ stateを使う場会必須\n  constructor(props) {\n    super(props);\n    this.state = {\n      json: []\n    };\n    var url = \"http://localhost:4000/wether\";\n    axios.post(url, {\n      latlong: this.props.data.latlong\n    }).then(response => this.JsonStateSet(response)).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  JsonStateSet(response) {\n    this.setState({\n      json: response.data.daily\n    });\n  }\n\n  render() {\n    var rowsDay = [];\n    var rowswether = [];\n    var rowstempertureHigh = [];\n    var rowstempertureLow = [];\n    var rowsprecipProbbility = [];\n    var rowsprecipIntensity = [];\n    var rowswindSpeed = [];\n\n    if (this.state.json.data !== undefined) {\n      var todaydate = new Date();\n\n      for (var i = 0; i < 3; i++) {\n        rowsDay.push(React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"\".concat(todaydate.getMonth() + 1, \"/\").concat(todaydate.getDate() + i)));\n      }\n\n      for (i = 0; i < 3; i++) {\n        rowswether.push(React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, this.state.json.data[i].summary));\n      }\n\n      for (i = 0; i < 3; i++) {\n        rowstempertureHigh.push(React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, this.state.json.data[i].temperatureHigh));\n      }\n\n      for (i = 0; i < 3; i++) {\n        rowstempertureLow.push(React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, this.state.json.data[i].temperatureLow));\n      }\n\n      for (i = 0; i < 3; i++) {\n        rowsprecipProbbility.push(React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, this.state.json.data[i].precipProbability));\n      }\n\n      for (i = 0; i < 3; i++) {\n        rowsprecipIntensity.push(React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, this.state.json.data[i].precipIntensity));\n      }\n\n      for (i = 0; i < 3; i++) {\n        rowswindSpeed.push(React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, this.state.json.data[i].windSpeed));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(MyPaper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(MyTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 3,\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.props.data.name))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, rowsDay), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, rowswether), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, rowstempertureHigh), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, rowstempertureLow), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, rowsprecipProbbility), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, rowsprecipIntensity), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, rowswindSpeed))))));\n  }\n\n}\n\nexport default Ski_area_table;","map":{"version":3,"sources":["C:\\Users\\shins\\OneDrive\\デスクトップ\\webaplication\\pow\\src\\template\\Ski_area_table.js"],"names":["React","Component","createGlobalStyle","axios","Table","TableBody","TableCell","TableHead","TableRow","Paper","styled","color","GlobalStyle","MyTable","height","padding","width","background","marginLeft","marginRight","MyPaper","textAlign","Ski_area_table","constructor","props","state","json","url","post","latlong","data","then","response","JsonStateSet","catch","error","console","log","setState","daily","render","rowsDay","rowswether","rowstempertureHigh","rowstempertureLow","rowsprecipProbbility","rowsprecipIntensity","rowswindSpeed","undefined","todaydate","Date","i","push","getMonth","getDate","summary","temperatureHigh","temperatureLow","precipProbability","precipIntensity","windSpeed","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport axios from 'axios';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { styled } from '@material-ui/styles';\r\nimport color from '@material-ui/core/colors/teal';\r\n\r\n\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n@import url('../../../weather-icons-master/css/weather-icons.min.css');\r\ndiv .root{\r\n  text-align:center;\r\n  width: 100%;\r\n  font-family: 'Kosugi Maru', sans-serif;\r\n}\r\nspan:before{\r\n  content:\"\\f002\";\r\n  font-family: 'weathericons';\r\n}\r\n`;\r\n//CSS定義\r\nconst MyTable = styled(Table)({\r\n  height: \"490px\",\r\n  padding: '100px 30px',\r\n  width:\"600px\",\r\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n  marginLeft  : 'auto',\r\n    marginRight : 'auto',\r\n});\r\nconst MyPaper = styled(Paper)({\r\n  height: \"500pxpx\",\r\n  padding: '30px 30px',\r\n  width:\"700px\",\r\n  textAlign: 'center',\r\n  marginLeft  : 'auto',\r\n    marginRight : 'auto',\r\n});\r\nclass Ski_area_table extends Component {\r\n    //コンストラクタ stateを使う場会必須\r\n    constructor (props) {\r\n      super(props)\r\n      this.state = {\r\n        json :[],\r\n      };\r\n    \r\n    var url = `http://localhost:4000/wether`;\r\n    axios.post(url, {\r\n      latlong: this.props.data.latlong\r\n    })\r\n    .then(response => (this.JsonStateSet(response)))\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n    }\r\n    JsonStateSet(response){\r\n      this.setState({json:response.data.daily})\r\n        }\r\n\r\n  render() {\r\n\r\n    var rowsDay = [];\r\n    var rowswether = [];\r\n    var rowstempertureHigh = [];\r\n    var rowstempertureLow = [];\r\n    var rowsprecipProbbility = [];\r\n    var rowsprecipIntensity = [];\r\n    var rowswindSpeed = [];\r\n\r\n    if(this.state.json.data !== undefined){\r\n      var todaydate = new Date();\r\n      for(var i = 0;i < 3; i++){\r\n        rowsDay.push(<TableCell align=\"center\">\r\n        {`${todaydate.getMonth()+1}/${todaydate.getDate()+i}`}\r\n        </TableCell>);\r\n      }\r\n      for(i = 0;i < 3; i++){\r\n        rowswether.push(<TableCell align=\"center\">\r\n          {this.state.json.data[i].summary}\r\n          </TableCell>);\r\n      }\r\n      for(i = 0;i < 3; i++){\r\n        rowstempertureHigh.push(<TableCell align=\"center\">\r\n          {this.state.json.data[i].temperatureHigh}\r\n          </TableCell>);\r\n      }\r\n      for(i = 0;i < 3; i++){\r\n        rowstempertureLow.push(<TableCell align=\"center\">\r\n          {this.state.json.data[i].temperatureLow}\r\n          </TableCell>);\r\n      }\r\n      for(i = 0;i < 3; i++){\r\n        rowsprecipProbbility.push(<TableCell align=\"center\">\r\n          {this.state.json.data[i].precipProbability}\r\n          </TableCell>);\r\n      }\r\n      for(i = 0;i < 3; i++){\r\n        rowsprecipIntensity.push(<TableCell align=\"center\">\r\n          {this.state.json.data[i].precipIntensity}\r\n          </TableCell>);\r\n      }\r\n      for(i = 0;i < 3; i++){\r\n        rowswindSpeed.push(<TableCell align=\"center\">\r\n          {this.state.json.data[i].windSpeed}\r\n          </TableCell>);\r\n      }\r\n  }\r\n    return (\r\n    <div className=\"root\">\r\n      <GlobalStyle />\r\n     <MyPaper >\r\n     <span></span>\r\n      <div className=\"table\">\r\n        <MyTable>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell colSpan={3} align=\"center\">{this.props.data.name}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n              <TableRow >\r\n                {rowsDay}\r\n              </TableRow>\r\n              <TableRow >\r\n                {rowswether}\r\n              </TableRow>\r\n              <TableRow >\r\n                {rowstempertureHigh}\r\n              </TableRow>\r\n              <TableRow >\r\n                {rowstempertureLow}\r\n              </TableRow>\r\n              <TableRow >\r\n                {rowsprecipProbbility}\r\n              </TableRow>\r\n              <TableRow >\r\n                {rowsprecipIntensity}\r\n              </TableRow>\r\n              <TableRow >\r\n                {rowswindSpeed}\r\n              </TableRow>\r\n          </TableBody>\r\n        </MyTable>\r\n      </div>\r\n    </MyPaper>\r\n  \r\n    </div>\r\n    )}\r\n          \r\n}\r\n\r\nexport default Ski_area_table;"]},"metadata":{},"sourceType":"module"}