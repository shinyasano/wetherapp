{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\webaplication\\\\pow\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\webaplication\\\\pow\\\\src\\\\template\\\\Ski_area_table.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\ndiv .table{\\n\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { createGlobalStyle } from \"styled-components\";\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 650\n  }\n}));\nconst GlobalStyle = createGlobalStyle(_templateObject());\n\nclass Ski_area_table extends Component {\n  //コンストラクタ stateを使う場会必須\n  constructor(props) {\n    super(props);\n    this.state = {\n      json: []\n    };\n    var url = \"http://localhost:4000/wether\";\n    axios.post(url, {\n      latlong: this.props.data.latlong\n    }).then(response => this.JsonStateSet(response)).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  JsonStateSet(response) {\n    this.setState({\n      json: response\n    });\n  }\n\n  render() {\n    console.log(this.state.json.data.daily.data[0].precipIntensity); //天気のデータ\n\n    var todaydata = this.state.json.data.daily.data[0];\n    var tommorowdata = this.state.json.data.daily.data[1];\n    var dayaftertommorowdata = this.state.json.data.daily.data[2]; //本日の日付\n\n    var todaydate = new Date();\n    var tommorowdate;\n    tommorowdate.setDate(todaydate.getDate() + 1);\n    var dayaftertommorowdate;\n    dayaftertommorowdate.setDate(todaydate.getDate() + 2);\n    var rows = [createDay(todaydate, tommorowdate, dayaftertommorowdate), createwether(todaydata, tommorowdata, dayaftertommorowdata), createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata), createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata), createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata), createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata), createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata)]; //テーブル作成関数\n\n    function createDay(today, tommorow, dayaftertommorow) {\n      today = \"\".concat(today.getMonth() + 1, \"/\").concat(today.getDate());\n      tommorow = \"\".concat(tommorow.getMonth() + 1, \"/\").concat(tommorow.getDate());\n      dayaftertommorow = \"\".concat(dayaftertommorow.getMonth() + 1, \"/\").concat(dayaftertommorow.getDate());\n      return {\n        today,\n        tommorow,\n        dayaftertommorow\n      };\n    }\n\n    ;\n\n    function createwether(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todayweather = todaydata.icon;\n      let tommoroweather = tommorowdata.icon;\n      let dayaftertommoroweather = dayaftertommorowdata.icon;\n      return {\n        todayweather,\n        tommoroweather,\n        dayaftertommoroweather\n      };\n    }\n\n    ;\n\n    function createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todaytempertureHigh = todaydata.tempertureHigh;\n      let tommorowtempertureHigh = tommorowdata.tempertureHigh;\n      let dayaftertommorowtempertureHigh = dayaftertommorowdata.tempertureHigh;\n      return {\n        todaytempertureHigh,\n        tommorowtempertureHigh,\n        dayaftertommorowtempertureHigh\n      };\n    }\n\n    ;\n\n    function createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todaytempertureLow = todaydata.tempertureLow;\n      let tommorowtempertureLow = tommorowdata.tempertureLow;\n      let dayaftertommorowtempertureLow = dayaftertommorowdata.tempertureLow;\n      return {\n        todaytempertureLow,\n        tommorowtempertureLow,\n        dayaftertommorowtempertureLow\n      };\n    }\n\n    ;\n\n    function createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todayprecipProbbility = todaydata.precipProbbility;\n      let tommorowprecipProbbility = tommorowdata.precipProbbility;\n      let dayaftertommorowprecipProbbility = dayaftertommorowdata.precipProbbility;\n      return {\n        todayprecipProbbility,\n        tommorowprecipProbbility,\n        dayaftertommorowprecipProbbility\n      };\n    }\n\n    ;\n\n    function createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todayprecipIntensity = todaydata.precipIntensity;\n      let tommorowpprecipIntensity = tommorowdata.precipIntensity;\n      let dayaftertommorowprecipIntensity = dayaftertommorowdata.precipIntensity;\n      return {\n        todayprecipIntensity,\n        tommorowpprecipIntensity,\n        dayaftertommorowprecipIntensity\n      };\n    }\n\n    ;\n\n    function createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata) {\n      let todaywindSpeed = todaydata.windSpeed;\n      let tommorowwindSpeed = tommorowdata.windSpeed;\n      let dayaftertommorowwindSpeed = dayaftertommorowdata.windSpeed;\n      return {\n        todaywindSpeed,\n        tommorowwindSpeed,\n        dayaftertommorowwindSpeed\n      };\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), this.props.data.name, this.props.data.pref, this.props.data.address, this.props.data.latlong, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.props.data.name))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, rows.map(row => React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, row.createDay), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, row.createwether), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, row.createtempertureHigh), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, row.createtempertureLow), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, row.createprecipProbbility), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, row.createprecipIntensity), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, row.createtewindSpeed)))))));\n  }\n\n}\n\nexport default Ski_area_table;","map":{"version":3,"sources":["C:\\Users\\shins\\OneDrive\\デスクトップ\\webaplication\\pow\\src\\template\\Ski_area_table.js"],"names":["React","Component","createGlobalStyle","axios","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","GlobalStyle","Ski_area_table","constructor","props","state","json","url","post","latlong","data","then","response","JsonStateSet","catch","error","console","log","setState","render","daily","precipIntensity","todaydata","tommorowdata","dayaftertommorowdata","todaydate","Date","tommorowdate","setDate","getDate","dayaftertommorowdate","rows","createDay","createwether","createtempertureHigh","createtempertureLow","createprecipProbbility","createprecipIntensity","createtewindSpeed","today","tommorow","dayaftertommorow","getMonth","todayweather","icon","tommoroweather","dayaftertommoroweather","todaytempertureHigh","tempertureHigh","tommorowtempertureHigh","dayaftertommorowtempertureHigh","todaytempertureLow","tempertureLow","tommorowtempertureLow","dayaftertommorowtempertureLow","todayprecipProbbility","precipProbbility","tommorowprecipProbbility","dayaftertommorowprecipProbbility","todayprecipIntensity","tommorowpprecipIntensity","dayaftertommorowprecipIntensity","todaywindSpeed","windSpeed","tommorowwindSpeed","dayaftertommorowwindSpeed","name","pref","address","map","row"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\ndiv .table{\r\n\r\n}\r\n`;\r\n  \r\nclass Ski_area_table extends Component {\r\n    //コンストラクタ stateを使う場会必須\r\n    constructor (props) {\r\n      super(props)\r\n      this.state = {\r\n        json :[],\r\n      };\r\n    \r\n    var url = `http://localhost:4000/wether`;\r\n    axios.post(url, {\r\n      latlong: this.props.data.latlong\r\n    })\r\n    .then(response => (this.JsonStateSet(response)))\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n    }\r\n    JsonStateSet(response){\r\n      this.setState({ json:response})\r\n\r\n        }\r\n\r\n  render() {\r\n    console.log(this.state.json.data.daily.data[0].precipIntensity);\r\n//天気のデータ\r\nvar todaydata = this.state.json.data.daily.data[0]\r\nvar tommorowdata = this.state.json.data.daily.data[1]\r\nvar dayaftertommorowdata = this.state.json.data.daily.data[2]\r\n//本日の日付\r\nvar todaydate = new Date();\r\nvar tommorowdate\r\ntommorowdate.setDate(todaydate.getDate() + 1);\r\nvar dayaftertommorowdate\r\ndayaftertommorowdate.setDate(todaydate.getDate() + 2);\r\nvar rows = [\r\n  createDay(todaydate, tommorowdate, dayaftertommorowdate),\r\n  createwether(todaydata, tommorowdata, dayaftertommorowdata),\r\n  createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata),\r\n  createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata),\r\n  createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata),\r\n  createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata),\r\n  createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata),\r\n  ];\r\n  //テーブル作成関数\r\n  function createDay(today, tommorow, dayaftertommorow) {\r\n    today = `${today.getMonth()+1}/${today.getDate()}`;\r\n    tommorow = `${tommorow.getMonth()+1}/${tommorow.getDate()}`;\r\n    dayaftertommorow = `${dayaftertommorow.getMonth()+1}/${dayaftertommorow.getDate()}`;\r\n    return { today, tommorow, dayaftertommorow};\r\n  };\r\n  function createwether(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todayweather = todaydata.icon;\r\n    let tommoroweather = tommorowdata.icon;\r\n    let dayaftertommoroweather = dayaftertommorowdata.icon;\r\n    return { todayweather, tommoroweather, dayaftertommoroweather};\r\n  };\r\n  function createtempertureHigh(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todaytempertureHigh = todaydata.tempertureHigh;\r\n    let tommorowtempertureHigh = tommorowdata.tempertureHigh;\r\n    let dayaftertommorowtempertureHigh = dayaftertommorowdata.tempertureHigh;\r\n    return { todaytempertureHigh, tommorowtempertureHigh, dayaftertommorowtempertureHigh};\r\n  };\r\n  function createtempertureLow(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todaytempertureLow = todaydata.tempertureLow;\r\n    let tommorowtempertureLow = tommorowdata.tempertureLow;\r\n    let dayaftertommorowtempertureLow = dayaftertommorowdata.tempertureLow;\r\n    return { todaytempertureLow, tommorowtempertureLow, dayaftertommorowtempertureLow};\r\n  };\r\n  function createprecipProbbility(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todayprecipProbbility = todaydata.precipProbbility;\r\n    let tommorowprecipProbbility = tommorowdata.precipProbbility;\r\n    let dayaftertommorowprecipProbbility = dayaftertommorowdata.precipProbbility;\r\n    return { todayprecipProbbility, tommorowprecipProbbility, dayaftertommorowprecipProbbility};\r\n  };\r\n  function createprecipIntensity(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todayprecipIntensity = todaydata.precipIntensity;\r\n    let tommorowpprecipIntensity = tommorowdata.precipIntensity;\r\n    let dayaftertommorowprecipIntensity = dayaftertommorowdata.precipIntensity;\r\n    return { todayprecipIntensity, tommorowpprecipIntensity, dayaftertommorowprecipIntensity};\r\n  };\r\n  function createtewindSpeed(todaydata, tommorowdata, dayaftertommorowdata) {\r\n    let todaywindSpeed = todaydata.windSpeed;\r\n    let tommorowwindSpeed = tommorowdata.windSpeed;\r\n    let dayaftertommorowwindSpeed = dayaftertommorowdata.windSpeed;\r\n    return { todaywindSpeed, tommorowwindSpeed, dayaftertommorowwindSpeed};\r\n  };\r\n    return (\r\n      \r\n    <div className='table'>\r\n      <GlobalStyle />\r\n      {this.props.data.name}\r\n      {this.props.data.pref}\r\n      {this.props.data.address}\r\n      {this.props.data.latlong}\r\n\r\n\r\n      <Paper >\r\n      <Table >\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">{this.props.data.name}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.createDay}</TableCell>\r\n              <TableCell align=\"right\">{row.createwether}</TableCell>\r\n              <TableCell align=\"right\">{row.createtempertureHigh}</TableCell>\r\n              <TableCell align=\"right\">{row.createtempertureLow}</TableCell>\r\n              <TableCell align=\"right\">{row.createprecipProbbility}</TableCell>\r\n              <TableCell align=\"right\">{row.createprecipIntensity}</TableCell>\r\n              <TableCell align=\"right\">{row.createtewindSpeed}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n    </div>\r\n    )}\r\n}\r\n\r\nexport default Ski_area_table;"]},"metadata":{},"sourceType":"module"}