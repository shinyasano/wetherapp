{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shins\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\web\\u30A2\\u30D7\\u30EA\\\\pow\\\\src\\\\pages\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Header from '../template/Header';\nimport Mainmessage from '../template/Mainmessage';\nimport Sarchbar from '../template/Sarchbar';\nimport Skiarea_list from './Skiarea_list';\nimport Buttun from '../template/Buttun';\n\nclass App extends Component {\n  //コンストラクタ stateを使う場会必須\n  constructor(props) {\n    super(props);\n    this.state = {\n      area: '',\n      pref: '',\n      posts: []\n    }; //expressとの橋渡しpostsにSQLで取得したものがはいっている。\n\n    fetch(\"http://localhost:4000\").then(response => response.json()).then(json => this.setState({\n      posts: json\n    }));\n  }\n\n  AreaStateSet(getstate) {\n    this.setState({\n      area: getstate\n    });\n  }\n\n  PrefStateSet(getstate) {\n    this.setState({\n      pref: getstate\n    });\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.posts.map(post => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, post))))), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Mainmessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Sarchbar, {\n        SuperAreaStateSet: getstate => this.AreaStateSet(getstate),\n        SuperPrefStateSet: getstate => this.PrefStateSet(getstate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Buttun, Object.assign({\n        url: \"/skiarea\"\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/skiarea\",\n      render: props => React.createElement(Skiarea_list, {\n        area: this.state.area,\n        pref: this.state.pref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\shins\\OneDrive\\デスクトップ\\webアプリ\\pow\\src\\pages\\App.js"],"names":["React","Component","BrowserRouter","Route","Header","Mainmessage","Sarchbar","Skiarea_list","Buttun","App","constructor","props","state","area","pref","posts","fetch","then","response","json","setState","AreaStateSet","getstate","PrefStateSet","render","map","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Header from '../template/Header';\nimport Mainmessage from '../template/Mainmessage';\nimport Sarchbar from '../template/Sarchbar';\nimport Skiarea_list from './Skiarea_list';\nimport Buttun from '../template/Buttun';\n\nclass App extends Component {\n  //コンストラクタ stateを使う場会必須\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      area:'',\n      pref:'',\n      posts: [],\n    };\n//expressとの橋渡しpostsにSQLで取得したものがはいっている。\n    fetch(\"http://localhost:4000\")\n    .then(response => response.json())\n    .then(json => this.setState({ posts: json }));\n  }\n\n  AreaStateSet(getstate) {\n    this.setState({ area: getstate },);\n  }\n  PrefStateSet(getstate) {\n    this.setState({ pref: getstate },);\n  }\n  render() {\n    return (\n      <BrowserRouter>\n      <div className='main'>\n        <Header />\n        <ul>\n          {this.state.posts.map(post => (\n            <li>\n              <h2>{post}</h2>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n        <Route exact path='/' component={Mainmessage} />\n        <Route exact path='/' render={props => \n        <Sarchbar \n        SuperAreaStateSet={getstate => this.AreaStateSet(getstate)}\n        SuperPrefStateSet={getstate => this.PrefStateSet(getstate)}\n        />} />\n        <Route exact path='/' render={props => <Buttun url=\"/skiarea\" {...props}/>}\n         />\n\n        <Route  path='/skiarea' render={props => <Skiarea_list area={this.state.area} pref={this.state.pref}/>} />\n\n\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}